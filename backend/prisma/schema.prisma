// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  phoneNumber String  @unique
  buildingId String
  isAdmin  Boolean  @default(false)
  resetToken String?
  resetTokenExpiry String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  building  Building @relation(fields: [buildingId], references: [id])
  subscriptions Subscription[]
}

model Building {
  id        String   @id @default(uuid())
  name      String
  location   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  routers   Router[]
}

model Plan{
  id           String            @id @default(uuid())
  name         String
  duration     Int
  price        Decimal
  bandwidth    Int
  subscriptions Subscription[]
}

model Subscription {
  id        String   @id @default(uuid())
  userId    String
  planId    String
  startDate DateTime
  endDate   DateTime
  isActive  Boolean @default(true)
  user      User     @relation(fields: [userId], references: [id])
  plan      Plan     @relation(fields: [planId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Router {
  id        String   @id @default(uuid())
  buildingId String
  name      String
  ip        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  building  Building @relation(fields: [buildingId], references: [id])
}


